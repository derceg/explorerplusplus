version: 1.4.0.{build}
image: Visual Studio 2019

configuration: Release

platform:
- Win32
- x64

branches:
  except:
  - l10n_master

environment:
  PFX_ENC_PASS:
    secure: vl0ntw9DjQdAno9nYVe0osg2tBmXD7gW75NLfxIvxMDW3GiVlJlFcESf7v6f7qKe
  PFX_PASS:
    secure: rgMy2ixSiaW0sk2CwaHwO5pK8U98ynzt/jjiGNRSYPfaAcOTRZ5oX+fsgqn6qP54

init:
- ps: >-
    if ($env:APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH -eq 'l10n_master') {
      Write-Host 'Skipping l10n_master branch pull request'
      Exit-AppveyorBuild
    }

# Decrypt the code signing certificate.
install:
- cmd: >-
    nuget install secure-file -ExcludeVersion

    SET PATH=C:\Program Files (x86)\HTML Help Workshop;%PATH%

    IF DEFINED PFX_ENC_PASS (secure-file\tools\secure-file -decrypt %APPVEYOR_BUILD_FOLDER%\authenticode.pfx.enc -secret %PFX_ENC_PASS%)

before_build:
- ps: >-
    nuget restore Explorer++\Explorer++.sln

    if (Test-Path env:APPVEYOR_REPO_TAG_NAME) {
      if ($env:APPVEYOR_REPO_TAG_NAME -match '-beta$') {
        $env:RELEASE_MODE = 'beta'
      } else {
        $env:RELEASE_MODE = 'stable'
      }
    }

build:
  project: Explorer++\Explorer++.sln
  verbosity: minimal

# Sign and package the executable.
after_build:
- cmd: >-
    cd %APPVEYOR_BUILD_FOLDER%


    IF "%PLATFORM%" == "Win32" (SET "arch=x86") ELSE (SET "arch=x64")


    SET "archiveName=explorerpp_%arch%.zip"


    CALL %APPVEYOR_BUILD_FOLDER%\Scripts\AppVeyor\compile_help_file.bat


    7z a %archiveName% %APPVEYOR_BUILD_FOLDER%\Explorer++\Explorer++\%PLATFORM%\%CONFIGURATION%\Explorer++.exe

    7z a %archiveName% %APPVEYOR_BUILD_FOLDER%\Documentation\User\History.txt

    7z a %archiveName% %APPVEYOR_BUILD_FOLDER%\Documentation\User\License.txt

    7z a %archiveName% %APPVEYOR_BUILD_FOLDER%\Documentation\User\Readme.txt

    7z a %archiveName% "%APPVEYOR_BUILD_FOLDER%\Documentation\User\Help Manual\Explorer++ Help.chm"


    7z a explorerpp_%arch%_symbols.zip %APPVEYOR_BUILD_FOLDER%\Explorer++\Explorer++\%PLATFORM%\%CONFIGURATION%\Explorer++.pdb


    copy "%APPVEYOR_BUILD_FOLDER%\Explorer++\Installer\bin\%arch%\%CONFIGURATION%\Explorer++ Setup.msi" "Explorer++ Setup.msi"


    7z a explorerpp_translations.zip %APPVEYOR_BUILD_FOLDER%\Explorer++\Win32\%CONFIGURATION%\Explorer++*.dll

test_script:
- ps: >-
    cd $env:APPVEYOR_BUILD_FOLDER\Explorer++\TestExplorer++\$env:PLATFORM\$env:CONFIGURATION


    # Run the tests.

    .\TestExplorer++.exe --gtest_output=xml:TestExplorer++Output.xml


    # Upload results to AppVeyor.

    $wc = New-Object 'System.Net.WebClient'

    $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestExplorer++Output.xml))

artifacts:
- path: explorerpp_x86.zip
- path: explorerpp_x86_symbols.zip
- path: explorerpp_x64.zip
- path: explorerpp_x64_symbols.zip
- path: Explorer++ Setup.msi
- path: explorerpp_translations.zip

before_deploy:
- ps: >-
    $versionComponents = $env:APPVEYOR_BUILD_VERSION -split '\.'

    $versionComponents = $versionComponents[0, 1, 2]

    $releaseBuildVersion = $versionComponents -join '.'

    if ($env:APPVEYOR_REPO_TAG_NAME -match '-beta$') {
      $env:RELEASE_TITLE = "Explorer++ $releaseBuildVersion beta"
      $env:PRERELEASE = $true
    } else {
      $env:RELEASE_TITLE = "Explorer++ $releaseBuildVersion"
      $env:PRERELEASE = $false
    }

deploy:
  provider: GitHub
  auth_token:
    secure: iU7ijPhvPEwymBKhGsZBwD9aDO3yPWpAq8iS5vaQcs5YdLRgcICuLOEJZ9UZIh9l
  tag: $(APPVEYOR_REPO_TAG_NAME)
  release: $(RELEASE_TITLE)
  prerelease: $(PRERELEASE)
  description: ''
  artifact: /.*\.zip/
  force_update: true
  draft: true
  on:
    APPVEYOR_REPO_TAG: true